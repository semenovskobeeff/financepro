name: Finance App CI/CD

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                node-version: [18.x, 20.x]

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm run install:all

            - name: Lint client
              run: cd client && npm run lint

            - name: Test client
              run: cd client && npm test

            - name: Test server
              run: cd server && npm test

            - name: E2E tests
              run: cd client && npm run test:e2e

    build:
        needs: test
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')

        steps:
            - uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}

            - name: Build and push client
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./infrastructure/docker/frontend.dockerfile
                  push: true
                  tags: username/finance-app-client:latest

            - name: Build and push server
              uses: docker/build-push-action@v4
              with:
                  context: .
                  file: ./infrastructure/docker/backend.dockerfile
                  push: true
                  tags: username/finance-app-server:latest

    deploy:
        needs: build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Deploy to production
              run: echo "Deploying to production server..."
              # Здесь должен быть реальный скрипт деплоя
