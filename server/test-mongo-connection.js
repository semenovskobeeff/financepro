const mongoose = require('mongoose');
const https = require('https');

console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB...');
console.log('');

// –ü–æ–ª—É—á–∞–µ–º IP –∞–¥—Ä–µ—Å
const getIP = () => {
  return new Promise(resolve => {
    https
      .get('https://api.ipify.org?format=json', res => {
        let data = '';
        res.on('data', chunk => (data += chunk));
        res.on('end', () => {
          try {
            const ip = JSON.parse(data).ip;
            resolve(ip);
          } catch (e) {
            resolve('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å');
          }
        });
      })
      .on('error', () => {
        resolve('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è IP');
      });
  });
};

// –¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
const testConnection = async () => {
  try {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º IP
    const ip = await getIP();
    console.log('üìç –í–∞—à —Ç–µ–∫—É—â–∏–π IP:', ip);
    console.log(
      '‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–æ—Ç IP –¥–æ–±–∞–≤–ª–µ–Ω –≤ MongoDB Atlas Network Access'
    );
    console.log('');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const uri =
      process.env.MONGODB_URI || 'mongodb://localhost:27017/finance-app-test';
    console.log(
      'üìã –¢–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:',
      uri.startsWith('mongodb+srv')
        ? 'MongoDB Atlas (–æ–±–ª–∞–∫–æ)'
        : '–õ–æ–∫–∞–ª—å–Ω–∞—è MongoDB'
    );
    console.log(
      'üìã –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:',
      uri.replace(/\/\/[^:]+:[^@]+@/, '//***:***@')
    );
    console.log('');

    console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...');

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    await mongoose.connect(uri, {
      serverSelectionTimeoutMS: 10000, // 10 —Å–µ–∫—É–Ω–¥
      socketTimeoutMS: 45000,
      maxPoolSize: 10,
      retryWrites: true,
    });

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:', mongoose.connection.db.databaseName);
    console.log('üè† –•–æ—Å—Ç:', mongoose.connection.host);
    console.log('üîå –ü–æ—Ä—Ç:', mongoose.connection.port);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
    console.log('');
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π...');

    const collections = await mongoose.connection.db
      .listCollections()
      .toArray();
    console.log('üì¶ –ö–æ–ª–ª–µ–∫—Ü–∏–π –≤ –ë–î:', collections.length);

    await mongoose.disconnect();
    console.log('');
    console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üí° MongoDB –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ');

    process.exit(0);
  } catch (error) {
    console.error('');
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error.message);
    console.error('');

    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ—à–∏–±–æ–∫
    if (
      error.message.includes('not authorized') ||
      error.message.includes('authentication failed')
    ) {
      console.log('üîç –î–∏–∞–≥–Ω–æ–∑: –û–®–ò–ë–ö–ê –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò');
      console.log('üí° –†–µ—à–µ–Ω–∏—è:');
      console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è –≤ MONGODB_URI');
      console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω –≤ MongoDB Atlas');
      console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    } else if (
      error.message.includes('ECONNREFUSED') ||
      error.message.includes('ENOTFOUND')
    ) {
      console.log('üîç –î–∏–∞–≥–Ω–æ–∑: –°–ï–¢–ï–í–ê–Ø –ü–†–û–ë–õ–ï–ú–ê');
      console.log('üí° –†–µ—à–µ–Ω–∏—è:');
      console.log('   - –î–æ–±–∞–≤—å—Ç–µ –≤–∞—à IP –≤ MongoDB Atlas Network Access');
      console.log('   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
      console.log('   - –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª–∞—Å—Ç–µ—Ä MongoDB Atlas –∑–∞–ø—É—â–µ–Ω');
    } else if (
      error.message.includes('timeout') ||
      error.message.includes('timed out')
    ) {
      console.log('üîç –î–∏–∞–≥–Ω–æ–∑: –¢–ê–ô–ú–ê–£–¢ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø');
      console.log('üí° –†–µ—à–µ–Ω–∏—è:');
      console.log('   - IP –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ whitelist MongoDB Atlas');
      console.log('   - –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π —Ñ–∞–π—Ä–≤–æ–ª–ª –±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ—Ä—Ç 27017');
      console.log('   - –ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ');
    } else {
      console.log('üîç –î–∏–∞–≥–Ω–æ–∑: –ù–ï–ò–ó–í–ï–°–¢–ù–ê–Ø –û–®–ò–ë–ö–ê');
      console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:');
      console.log('   - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç MONGODB_URI');
      console.log('   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é MongoDB –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }

    console.log('');
    console.log('üõ†Ô∏è  –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:');
    console.log(
      '1. –û—Ç–∫—Ä–æ–π—Ç–µ mongodb-diagnostics.html –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏'
    );
    console.log(
      '2. –î–æ–±–∞–≤—å—Ç–µ IP',
      await getIP(),
      '–≤ MongoDB Atlas Network Access'
    );
    console.log('3. –ò–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø —Å–æ –≤—Å–µ—Ö IP: 0.0.0.0/0');

    process.exit(1);
  }
};

testConnection();
