// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏

interface AnalyticsDataCheck {
  useMocks: boolean;
  mockDataType: 'filled' | 'empty';
  hasAnalyticsData: boolean;
  issues: string[];
  fixes: string[];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö localStorage
export const cleanupLocalStorage = (): void => {
  try {
    // –£–¥–∞–ª—è–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –±–æ–ª—å—à–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
    const keysToRemove = [
      'persist:root',
      'debug',
      'networkErrorTipShown',
      'configLogged',
    ];

    keysToRemove.forEach(key => {
      localStorage.removeItem(key);
    });

    // –û—á–∏—â–∞–µ–º sessionStorage
    sessionStorage.clear();

    console.log('üßπ localStorage –æ—á–∏—â–µ–Ω –æ—Ç –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
  } catch (error) {
    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ localStorage:', error);
  }
};

export const diagnoseAnalyticsData = (): AnalyticsDataCheck => {
  const issues: string[] = [];
  const fixes: string[] = [];

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ localStorage
  const useMocks = localStorage.getItem('useMocks') === 'true';
  const mockDataType =
    (localStorage.getItem('mockDataType') as 'filled' | 'empty') || 'filled';

  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö:');
  console.log('- useMocks:', useMocks);
  console.log('- mockDataType:', mockDataType);

  if (!useMocks) {
    issues.push('–ú–æ–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã, –Ω–æ —Å–µ—Ä–≤–µ—Ä –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    fixes.push('–í–∫–ª—é—á–∏—Ç—å –º–æ–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏');
  }

  if (mockDataType === 'empty') {
    issues.push('–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–µ–∂–∏–º –ø—É—Å—Ç—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
    fixes.push('–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —Ä–µ–∂–∏–º –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
  }

  const hasAnalyticsData = mockDataType === 'filled' && useMocks;

  return {
    useMocks,
    mockDataType,
    hasAnalyticsData,
    issues,
    fixes,
  };
};

export const fixAnalyticsData = (): void => {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö...');

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  localStorage.setItem('useMocks', 'true');
  localStorage.setItem('mockDataType', 'filled');

  console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã:');
  console.log('- useMocks: true');
  console.log('- mockDataType: filled');
  console.log('üí° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω—è—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ –∫ API');
};

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
if (typeof window !== 'undefined') {
  // –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º localStorage –æ—Ç –∏–∑–±—ã—Ç–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  cleanupLocalStorage();

  const diagnosis = diagnoseAnalyticsData();

  if (diagnosis.issues.length > 0) {
    console.warn(
      '‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏:',
      diagnosis.issues
    );
    console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', diagnosis.fixes);

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–µ–¥—É
    const isProduction =
      import.meta.env.PROD ||
      import.meta.env.MODE === 'production' ||
      (window.location.hostname !== 'localhost' &&
        window.location.hostname !== '127.0.0.1');

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¢–û–õ–¨–ö–û –≤ development —Ä–µ–∂–∏–º–µ
    if (import.meta.env.DEV && !isProduction) {
      console.log(
        'üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (development)...'
      );
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      localStorage.setItem('useMocks', 'true');
      localStorage.setItem('mockDataType', 'filled');
      console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏');
    } else if (isProduction) {
      console.error('‚ùå [PRODUCTION] –ü—Ä–æ–±–ª–µ–º—ã —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ:');
      console.error('- –ú–æ–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ');
      console.error('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
      console.error('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É API —Å–µ—Ä–≤–µ—Ä–∞');
    }
  } else {
    console.log('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
  }
}
