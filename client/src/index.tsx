import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import './styles/global.css';
import './styles/notion-theme.css';
import './styles/notion-pastel.css';
import App from './App';
import { Provider } from 'react-redux';
import { store } from './app/store';
import { ThemeProvider } from './shared/config/ThemeContext';
import ErrorBoundary from './shared/ui/ErrorBoundary';
import { config } from './config/environment';
import {
  setupGlobalErrorHandlers,
  safeLocalStorage,
} from './shared/utils/errorUtils';

// –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
let isAppInitialized = false;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –æ—à–∏–±–æ–∫
setupGlobalErrorHandlers();

// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
const cleanupOnStart = () => {
  try {
    // –û—á–∏—â–∞–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –±–æ–ª—å—à–∏–µ –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ
    const keysToCleanup = [
      'persist:root', // –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ Redux persist
      'redux-localstorage-simple', // –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ
      'debug', // –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    ];

    keysToCleanup.forEach(key => {
      if (localStorage.getItem(key)) {
        safeLocalStorage.removeItem(key);
        console.log(`üßπ –û—á–∏—â–µ–Ω –∫–ª—é—á localStorage: ${key}`);
      }
    });

    // –û—á–∏—â–∞–µ–º sessionStorage –æ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    sessionStorage.clear();
  } catch (error) {
    console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ localStorage –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ:', error);
  }
};

// –í—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É
cleanupOnStart();

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', event => {
  console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
});

window.addEventListener('unhandledrejection', event => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', event.reason);
});

async function initApp() {
  // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  if (isAppInitialized) {
    console.log('[INDEX] –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
    return;
  }

  console.log('[INDEX] üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  console.log(
    '[INDEX] –†–µ–∂–∏–º:',
    config.useMocks ? '—Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ' : '—Ä–µ–∞–ª—å–Ω—ã–π API'
  );
  console.log('[INDEX] URL:', window.location.href);

  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º MSW —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if (config.useMocks) {
      console.log('[INDEX] üé≠ –ó–∞–ø—É—Å–∫ MSW...');
      const { startMSW, autoLoginTestUser } = await import(
        './shared/api/mocks/browser'
      );
      await startMSW();

      // –î–∞–µ–º MSW –≤—Ä–µ–º—è –Ω–∞ –ø–æ–ª–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
      await new Promise(resolve => setTimeout(resolve, 500));

      // –ü–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ MSW –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–ª–æ–≥–∏–Ω
      autoLoginTestUser();

      console.log('[INDEX] ‚úÖ MSW —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } else {
      console.log('[INDEX] üåê –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π API:', config.apiUrl);
    }

    const root = ReactDOM.createRoot(
      document.getElementById('root') as HTMLElement
    );

    root.render(
      <ErrorBoundary>
        <Provider store={store}>
          <ThemeProvider>
            <App />
          </ThemeProvider>
        </Provider>
      </ErrorBoundary>
    );

    isAppInitialized = true;
    console.log('[INDEX] ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
  } catch (error) {
    console.error('[INDEX] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—à–∏–±–∫—É
    const root = ReactDOM.createRoot(
      document.getElementById('root') as HTMLElement
    );

    root.render(
      <div
        style={{
          padding: '20px',
          textAlign: 'center',
          fontFamily: 'Arial, sans-serif',
          color: '#d32f2f',
        }}
      >
        <h2>–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</h2>
        <p>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.</p>
        <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</p>
        <details style={{ marginTop: '20px', textAlign: 'left' }}>
          <summary>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</summary>
          <pre
            style={{
              background: '#f5f5f5',
              padding: '10px',
              marginTop: '10px',
            }}
          >
            {error instanceof Error ? error.stack : String(error)}
          </pre>
        </details>
      </div>
    );
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑
if (!isAppInitialized) {
  initApp().catch(error => {
    console.error('‚ùå –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:', error);
  });
}
